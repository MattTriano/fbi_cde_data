STATE_CODES = {
    "01": "AL",
    "02": "AZ",
    "03": "AR",
    "04": "CA",
    "05": "CO",
    "06": "CT",
    "07": "DE",
    "08": "DC",
    "09": "FL",
    "10": "GA",
    "11": "ID",
    "12": "IL",
    "13": "IN",
    "14": "IA",
    "15": "KS",
    "16": "16",
    "17": "LA",
    "18": "ME",
    "19": "MD",
    "20": "MA",
    "21": "MI",
    "22": "MN",
    "23": "MS",
    "24": "MO",
    "25": "MT",
    "26": "NB",
    "27": "NV",
    "28": "NH",
    "29": "NJ",
    "30": "NM",
    "31": "NY",
    "32": "NC",
    "33": "ND",
    "34": "OH",
    "35": "OK",
    "36": "OR",
    "37": "PA",
    "38": "RI",
    "39": "SC",
    "40": "SD",
    "41": "TN",
    "42": "TX",
    "43": "UT",
    "44": "VT",
    "45": "VA",
    "46": "WA",
    "47": "WV",
    "48": "WI",
    "49": "WY",
    "50": "AK",
    "51": "HI",
    "52": "CZ",
    "53": "PR",
    "54": "AS",
    "55": "GM",
    "62": "VI",
}

POP_GROUP = {
    "0": "Possessions (PR, Guam, Canal Zone, VI, AS)",
    "1": "All cities 250K or over",
    "1A": "Cities 1M or over",
    "1B": "Cities from 500K thru 999999",
    "1C": "Cities from 250K thru 499999",
    "2": "Cities from 100K thru 249999",
    "3": "Cities from 50K thru 99999",
    "4": "Cities from 25K thru 49999",
    "5": "Cities from 10K thru 24999",
    "6": "Cities from 2500 thru 9999",
    "7": "Cities under 2500",
    "8": "Non-MSA Counties",
    "8A": "Non-MSA Counties 100K or over",
    "8B": "Non-MSA Counties from 25K thru 99999",
    "8C": "Non-MSA Counties from 10K thru 24999",
    "8D": "Non-MSA Counties under 10K",
    "9": "MSA Counties",
    "9A": "MSA Counties 100K or over",
    "9B": "MSA Counties from 25K thru 99999",
    "9C": "MSA Counties from 10K thru 24999",
    "9D": "MSA Counties under 10K",
    "9E": "MSA State Police",
}

DIVISION = {
    "0": "Possessions",
    "1": "New England",
    "2": "Middle Atlantic",
    "3": "East North Central",
    "4": "West North Central",
    "5": "South Atlantic",
    "6": "East South Central",
    "7": "West South Central",
    "8": "Mountain",
    "9": "Pacific",
}

REGION = {
    "1": "North East",
    "2": "North Central",
    "3": "South",
    "4": "West",
}

AGENCY_IND = {
    "0": "Covered by Another Agency",
    "1": "City",
    "2": "County",
    "3": "University of College",
    "4": "State Police",
}


class SegmentBHParser:
    def __init__(self, line: str):
        self.line = line
        self.record = self.unpack_record()

    def unpack_record(self) -> dict:
        return {
            "segment": self.line[0:2],
            "state_code": self.line[2:4],
            "ori": self.line[4:13],
            "incident_no": self.line[13:25],
            "ori_added": self.line[25:33],
            "ori_nibrs": self.line[33:41],
            "city": self.line[41:71],
            "state_abbr": self.line[71:73],
            "pop_group": self.line[73:75],
            "division": self.line[75:76],
            "region": self.line[76:77],
            "agency_ind": self.line[77:78],
            "core_city": self.line[78:79],
            "covered_by_ori": self.line[79:88],
            "fbi_field": self.line[89:92],
            "judicial_dist": self.line[92:96],
            "nibrs_flag": self.line[96:97],
            "inactive_date": self.line[97:105],
            "cnty1_curr_pop": self.line[105:114],
            "cnty1_code_ucr": self.line[114:117],
            "cnty1_msa_code": self.line[117:120],
            "cnty1_last_pop": self.line[120:129],
            "cnty2_curr_pop": self.line[129:138],
            "cnty2_code_ucr": self.line[138:141],
            "cnty2_msa_code": self.line[141:144],
            "cnty2_last_pop": self.line[144:153],
            "cnty3_curr_pop": self.line[153:162],
            "cnty3_code_ucr": self.line[163:165],
            "cnty3_msa_code": self.line[166:168],
            "cnty3_last_pop": self.line[168:177],
            "cnty4_curr_pop": self.line[177:186],
            "cnty4_code_ucr": self.line[186:189],
            "cnty4_msa_code": self.line[189:192],
            "cnty4_last_pop": self.line[192:201],
            "cnty5_curr_pop": self.line[201:210],
            "cnty5_code_ucr": self.line[210:213],
            "cnty5_msa_code": self.line[213:216],
            "cnty5_last_pop": self.line[216:225],
            "ind_1_6_12": self.line[225:227],
            "mo_reported": self.line[227:229],
            "master_year": self.line[229:233],
            "jan_zero_rpt": self.line[233:234],
            "jan_a_or_b": self.line[234:235],
            "jan_window": self.line[235:236],
            "feb_zero_rpt": self.line[236:237],
            "feb_a_or_b": self.line[237:238],
            "feb_window": self.line[238:239],
            "mar_zero_rpt": self.line[239:240],
            "mar_a_or_b": self.line[240:241],
            "mar_window": self.line[241:242],
            "apr_zero_rpt": self.line[242:243],
            "apr_a_or_b": self.line[243:244],
            "apr_window": self.line[244:245],
            "may_zero_rpt": self.line[245:246],
            "may_a_or_b": self.line[246:247],
            "may_window": self.line[247:248],
            "jun_zero_rpt": self.line[248:249],
            "jun_a_or_b": self.line[249:250],
            "jun_window": self.line[250:251],
            "jul_zero_rpt": self.line[251:252],
            "jul_a_or_b": self.line[252:253],
            "jul_window": self.line[253:254],
            "aug_zero_rpt": self.line[254:255],
            "aug_a_or_b": self.line[255:256],
            "aug_window": self.line[256:257],
            "sep_zero_rpt": self.line[257:258],
            "sep_a_or_b": self.line[258:259],
            "sep_window": self.line[259:260],
            "oct_zero_rpt": self.line[260:261],
            "oct_a_or_b": self.line[261:262],
            "oct_window": self.line[262:263],
            "nov_zero_rpt": self.line[263:264],
            "nov_a_or_b": self.line[264:265],
            "nov_window": self.line[265:266],
            "dec_zero_rpt": self.line[266:267],
            "dec_a_or_b": self.line[267:268],
            "dec_window": self.line[268:269],
            "cnty1_fips": self.line[269:272],
            "cnty2_fips": self.line[272:275],
            "cnty3_fips": self.line[275:278],
            "cnty4_fips": self.line[278:281],
            "cnty5_fips": self.line[281:284],
        }
